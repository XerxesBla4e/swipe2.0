// Generated by view binder compiler. Do not edit!
package com.example.e_sholpine.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_sholpine.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShareAccountLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCopyURL;

  @NonNull
  public final CircleImageView imvAvatarInSharedPlace;

  @NonNull
  public final LinearLayout shareOptions;

  @NonNull
  public final TextView txvCancelInSharedPlace;

  @NonNull
  public final TextView txvUsernameInSharedPlace;

  private ShareAccountLayoutBinding(@NonNull LinearLayout rootView, @NonNull Button btnCopyURL,
      @NonNull CircleImageView imvAvatarInSharedPlace, @NonNull LinearLayout shareOptions,
      @NonNull TextView txvCancelInSharedPlace, @NonNull TextView txvUsernameInSharedPlace) {
    this.rootView = rootView;
    this.btnCopyURL = btnCopyURL;
    this.imvAvatarInSharedPlace = imvAvatarInSharedPlace;
    this.shareOptions = shareOptions;
    this.txvCancelInSharedPlace = txvCancelInSharedPlace;
    this.txvUsernameInSharedPlace = txvUsernameInSharedPlace;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShareAccountLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShareAccountLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.share_account_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShareAccountLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCopyURL;
      Button btnCopyURL = ViewBindings.findChildViewById(rootView, id);
      if (btnCopyURL == null) {
        break missingId;
      }

      id = R.id.imvAvatarInSharedPlace;
      CircleImageView imvAvatarInSharedPlace = ViewBindings.findChildViewById(rootView, id);
      if (imvAvatarInSharedPlace == null) {
        break missingId;
      }

      id = R.id.share_options;
      LinearLayout shareOptions = ViewBindings.findChildViewById(rootView, id);
      if (shareOptions == null) {
        break missingId;
      }

      id = R.id.txvCancelInSharedPlace;
      TextView txvCancelInSharedPlace = ViewBindings.findChildViewById(rootView, id);
      if (txvCancelInSharedPlace == null) {
        break missingId;
      }

      id = R.id.txvUsernameInSharedPlace;
      TextView txvUsernameInSharedPlace = ViewBindings.findChildViewById(rootView, id);
      if (txvUsernameInSharedPlace == null) {
        break missingId;
      }

      return new ShareAccountLayoutBinding((LinearLayout) rootView, btnCopyURL,
          imvAvatarInSharedPlace, shareOptions, txvCancelInSharedPlace, txvUsernameInSharedPlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
