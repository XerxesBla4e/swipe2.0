// Generated by view binder compiler. Do not edit!
package com.example.e_sholpine.databinding;

import android.view.LayoutInflater;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_sholpine.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCameraBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnUploadVideo;

  @NonNull
  public final Button buttonClose;

  @NonNull
  public final Button buttonContinue;

  @NonNull
  public final Button buttonPause;

  @NonNull
  public final Button buttonRecord;

  @NonNull
  public final Button buttonStop;

  @NonNull
  public final FrameLayout cameraFrame;

  @NonNull
  public final FrameLayout flMain;

  @NonNull
  public final ImageButton imbFlipCamera;

  @NonNull
  public final TextureView textureViewBack;

  @NonNull
  public final TextureView textureViewFront;

  @NonNull
  public final TextView tvFlipCamera;

  private ActivityCameraBinding(@NonNull RelativeLayout rootView, @NonNull Button btnUploadVideo,
      @NonNull Button buttonClose, @NonNull Button buttonContinue, @NonNull Button buttonPause,
      @NonNull Button buttonRecord, @NonNull Button buttonStop, @NonNull FrameLayout cameraFrame,
      @NonNull FrameLayout flMain, @NonNull ImageButton imbFlipCamera,
      @NonNull TextureView textureViewBack, @NonNull TextureView textureViewFront,
      @NonNull TextView tvFlipCamera) {
    this.rootView = rootView;
    this.btnUploadVideo = btnUploadVideo;
    this.buttonClose = buttonClose;
    this.buttonContinue = buttonContinue;
    this.buttonPause = buttonPause;
    this.buttonRecord = buttonRecord;
    this.buttonStop = buttonStop;
    this.cameraFrame = cameraFrame;
    this.flMain = flMain;
    this.imbFlipCamera = imbFlipCamera;
    this.textureViewBack = textureViewBack;
    this.textureViewFront = textureViewFront;
    this.tvFlipCamera = tvFlipCamera;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUploadVideo;
      Button btnUploadVideo = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadVideo == null) {
        break missingId;
      }

      id = R.id.button_close;
      Button buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.button_continue;
      Button buttonContinue = ViewBindings.findChildViewById(rootView, id);
      if (buttonContinue == null) {
        break missingId;
      }

      id = R.id.button_pause;
      Button buttonPause = ViewBindings.findChildViewById(rootView, id);
      if (buttonPause == null) {
        break missingId;
      }

      id = R.id.button_record;
      Button buttonRecord = ViewBindings.findChildViewById(rootView, id);
      if (buttonRecord == null) {
        break missingId;
      }

      id = R.id.button_stop;
      Button buttonStop = ViewBindings.findChildViewById(rootView, id);
      if (buttonStop == null) {
        break missingId;
      }

      id = R.id.camera_frame;
      FrameLayout cameraFrame = ViewBindings.findChildViewById(rootView, id);
      if (cameraFrame == null) {
        break missingId;
      }

      id = R.id.flMain;
      FrameLayout flMain = ViewBindings.findChildViewById(rootView, id);
      if (flMain == null) {
        break missingId;
      }

      id = R.id.imb_flip_camera;
      ImageButton imbFlipCamera = ViewBindings.findChildViewById(rootView, id);
      if (imbFlipCamera == null) {
        break missingId;
      }

      id = R.id.texture_view_back;
      TextureView textureViewBack = ViewBindings.findChildViewById(rootView, id);
      if (textureViewBack == null) {
        break missingId;
      }

      id = R.id.texture_view_front;
      TextureView textureViewFront = ViewBindings.findChildViewById(rootView, id);
      if (textureViewFront == null) {
        break missingId;
      }

      id = R.id.tv_flip_camera;
      TextView tvFlipCamera = ViewBindings.findChildViewById(rootView, id);
      if (tvFlipCamera == null) {
        break missingId;
      }

      return new ActivityCameraBinding((RelativeLayout) rootView, btnUploadVideo, buttonClose,
          buttonContinue, buttonPause, buttonRecord, buttonStop, cameraFrame, flMain, imbFlipCamera,
          textureViewBack, textureViewFront, tvFlipCamera);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
